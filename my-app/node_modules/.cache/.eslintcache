[{"/home/daniel/hourLogger/my-app/src/index.tsx":"1","/home/daniel/hourLogger/my-app/src/App.tsx":"2","/home/daniel/hourLogger/my-app/src/DayView.tsx":"3"},{"size":658,"mtime":1655657836412,"results":"4","hashOfConfig":"5"},{"size":1452,"mtime":1656420759979,"results":"6","hashOfConfig":"5"},{"size":6216,"mtime":1656591932194,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xq8omj",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/daniel/hourLogger/my-app/src/index.tsx",[],[],"/home/daniel/hourLogger/my-app/src/App.tsx",["18","19"],[],"import * as React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { isPropertySignature } from \"typescript\";\nimport { DayView } from \"./DayView\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hour Logger</h1>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"dayview\" element={<DayView />} />\n      </Routes>\n    </div>\n  );\n}\n\nfunction Counter(props: { count: any; increment: any }) {\n  return (\n    <div>\n      {props.count} <button onClick={props.increment}>increment</button>\n    </div>\n  );\n}\n\nfunction Dounter(props: { count: any; setCount: any }) {\n  return <SetToFour count={props.count} setCount={props.setCount} />;\n}\n\nlet SetToFour = (props: { count: any; setCount: any }) => {\n  return (\n    <div>\n      {props.count} <button onClick={() => props.setCount(4)}>set to 4</button>\n    </div>\n  );\n};\n\n// App.js\nfunction Home() {\n  const [count, setCount] = React.useState(\"test\");\n  let increment = () => {\n    setCount(count + 1);\n  };\n  let decrement = () => {\n    setCount(count + 1);\n  };\n  return (\n    <div>\n      <Counter count={count} increment={increment} />\n      <Dounter count={count} setCount={setCount} />\n\n      <main>\n        <h2>Welcome to the homepage!</h2>\n        <p>You can do this, I believe in you.</p>\n      </main>\n\n      <nav>\n        <Link to=\"/dayview\">view day</Link>\n      </nav>\n    </div>\n  );\n}\n","/home/daniel/hourLogger/my-app/src/DayView.tsx",["20","21","22","23","24","25","26"],[],{"ruleId":"27","severity":1,"message":"28","line":3,"column":10,"nodeType":"29","messageId":"30","endLine":3,"endColumn":29},{"ruleId":"27","severity":1,"message":"31","line":45,"column":7,"nodeType":"29","messageId":"30","endLine":45,"endColumn":16},{"ruleId":"27","severity":1,"message":"32","line":1,"column":10,"nodeType":"29","messageId":"30","endLine":1,"endColumn":35},{"ruleId":"27","severity":1,"message":"33","line":17,"column":6,"nodeType":"29","messageId":"30","endLine":17,"endColumn":14},{"ruleId":"27","severity":1,"message":"34","line":22,"column":10,"nodeType":"29","messageId":"30","endLine":22,"endColumn":15},{"ruleId":"27","severity":1,"message":"35","line":22,"column":17,"nodeType":"29","messageId":"30","endLine":22,"endColumn":25},{"ruleId":"36","severity":1,"message":"37","line":152,"column":23,"nodeType":"38","messageId":"39","endLine":152,"endColumn":25},{"ruleId":"27","severity":1,"message":"40","line":160,"column":12,"nodeType":"29","messageId":"30","endLine":160,"endColumn":27},{"ruleId":"36","severity":1,"message":"37","line":161,"column":23,"nodeType":"38","messageId":"39","endLine":161,"endColumn":25},"@typescript-eslint/no-unused-vars","'isPropertySignature' is defined but never used.","Identifier","unusedVar","'decrement' is assigned a value but never used.","'ReadableStreamBYOBRequest' is defined but never used.","'pageData' is defined but never used.","'table' is assigned a value but never used.","'setTable' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'activityOnEnter' is defined but never used."]