[{"/home/daniel/hourLogger/my-app/src/index.tsx":"1","/home/daniel/hourLogger/my-app/src/App.tsx":"2","/home/daniel/hourLogger/my-app/src/DayView.tsx":"3","/home/daniel/Documents/hourLogger/my-app/src/index.tsx":"4","/home/daniel/Documents/hourLogger/my-app/src/App.tsx":"5","/home/daniel/Documents/hourLogger/my-app/src/DayView.tsx":"6"},{"size":658,"mtime":1655657836412,"results":"7","hashOfConfig":"8"},{"size":1452,"mtime":1656420759979,"results":"9","hashOfConfig":"8"},{"size":6216,"mtime":1656591932194,"results":"10","hashOfConfig":"8"},{"size":658,"mtime":1654715981071,"results":"11","hashOfConfig":"12"},{"size":1450,"mtime":1656960099060,"results":"13","hashOfConfig":"12"},{"size":6176,"mtime":1656960062219,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xq8omj",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wj0zun",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"/home/daniel/hourLogger/my-app/src/index.tsx",[],[],"/home/daniel/hourLogger/my-app/src/App.tsx",["35","36"],[],"import * as React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { isPropertySignature } from \"typescript\";\nimport { DayView } from \"./DayView\";\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Hour Logger</h1>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"dayview\" element={<DayView />} />\n      </Routes>\n    </div>\n  );\n}\n\nfunction Counter(props: { count: any; increment: any }) {\n  return (\n    <div>\n      {props.count} <button onClick={props.increment}>increment</button>\n    </div>\n  );\n}\n\nfunction Dounter(props: { count: any; setCount: any }) {\n  return <SetToFour count={props.count} setCount={props.setCount} />;\n}\n\nlet SetToFour = (props: { count: any; setCount: any }) => {\n  return (\n    <div>\n      {props.count} <button onClick={() => props.setCount(4)}>set to 4</button>\n    </div>\n  );\n};\n\n// App.js\nfunction Home() {\n  const [count, setCount] = React.useState(\"test\");\n  let increment = () => {\n    setCount(count + 1);\n  };\n  let decrement = () => {\n    setCount(count + 1);\n  };\n  return (\n    <div>\n      <Counter count={count} increment={increment} />\n      <Dounter count={count} setCount={setCount} />\n\n      <main>\n        <h2>Welcome to the homepage!</h2>\n        <p>You can do this, I believe in you.</p>\n      </main>\n\n      <nav>\n        <Link to=\"/dayview\">view day</Link>\n      </nav>\n    </div>\n  );\n}\n","/home/daniel/hourLogger/my-app/src/DayView.tsx",["37","38","39","40","41","42","43"],[],"/home/daniel/Documents/hourLogger/my-app/src/index.tsx",[],[],"/home/daniel/Documents/hourLogger/my-app/src/App.tsx",["44","45"],[],"/home/daniel/Documents/hourLogger/my-app/src/DayView.tsx",["46","47","48","49","50","51","52"],[],"import { log } from \"node:console\";\nimport { ReadableStreamBYOBRequest } from \"node:stream/web\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\n\ntype row = {\n  id: number;\n  hrs: number;\n  activity: string;\n};\ntype state = {\n  table: row[];\n  hrs: string;\n  activity: string;\n};\n\ntype pageData = { goals: string; table: row[]; Date: Date};\nexport let DayView = () => {\n  let row: row[] = [];\n  const [goals, setGoals] = React.useState(\"\");\n  // const [summary, setSummary] = React.useState(\"\");\n  const [table, setTable] = React.useState(row);\n  const [date, setDate] = React.useState(new Date())\n  let rows: row[] = [];\n  let [state, setState] = React.useState({\n    table: rows,\n    hrs: \"\",\n    activity: \"\",\n  });\n  \n\n  let sendData = () => {\n    console.log(\"interval send: \" + { goals, state, date});\n    let JSONStr = JSON.stringify({ goals, state, date });\n    let request = new XMLHttpRequest();\n    request.open(\"put\", \"/update\");\n    request.addEventListener('load', event => { console.log(\"message received\")})\n    console.log(JSONStr)\n    request.send(JSONStr);\n\n  };\n  sendData()\n  return (\n    <>\n      <main>\n        <h2>{date.toDateString()}</h2>\n        <ActivitiesTable value={state} onChange={setState} />\n        <Form formID=\"Goals\" value={goals} setState={setGoals} />\n      </main>\n      <nav>\n        <Link to=\"/\">Home</Link>\n      </nav>\n    </>\n  );\n};\n\nlet count: number = 0;\nfunction ActivitiesTable(props: { value: state; onChange: any }) {\n  function counter(): number {\n    count++;\n    return count;\n  }\n\n  let tablecounterlock: boolean = false;\n\n  //lock locks table counter\n  function lock() {\n    tablecounterlock = true;\n  }\n\n  //unlock unlocks table counter\n  function unlock() {\n    tablecounterlock = false;\n  }\n  //locked tell you if table counter is locked\n  // @returns boolean\n  function locked(): boolean {\n    return tablecounterlock;\n  }\n\n  function sumHrs(): number {\n    let count = 0;\n    for (let i = 0; i < props.value.table.length; i++) {\n      let row = props.value.table[i].hrs;\n      if (row) {\n        console.log(row);\n        count += row;\n      }\n    }\n    return count;\n  }\n  //deleterow deletes row from activity\n  function deleteRow(event: any, id: number) {\n    // console.log(\"delete row:\" + \"Id: \" + id.toString());\n    let tempA = props.value.table;\n    for (let i = 0; i < tempA.length; i++) {\n      if (tempA[i].id === id) {\n        console.log(i);\n        tempA.splice(i, 1);\n        props.onChange({\n          table: tempA,\n          activity: props.value.activity,\n          hrs: props.value.hrs,\n        });\n      }\n    }\n    console.log(props.value.table);\n  }\n  //handleChangeActivity updates state of activity on change\n  function handleChangeActivity(event: any) {\n    props.onChange({\n      activity: event.target.value,\n      hrs: props.value.hrs,\n      table: props.value.table,\n    });\n\n    console.log(props.value.activity);\n  }\n\n  //handleChangeHrs updates state of hrs on change\n  function handleChangeHrs(event: any) {\n    props.onChange({\n      activity: props.value.activity,\n      hrs: event.target.value,\n      table: props.value.table,\n    });\n\n    console.log(props.value.hrs);\n  }\n\n  //handleSubmit adds row entry to activity table\n  function handleSubmit(event: any) {\n    event.preventDefault();\n    console.log(props.value.activity + \"counter:\" + counter());\n    if (!locked()) {\n      lock();\n      let tempA = props.value.table;\n      tempA.push({\n        id: counter(),\n        hrs: Number.parseFloat(props.value.hrs),\n        activity: props.value.activity,\n      });\n      props.onChange({ activity: \"\", hrs: \"\", table: tempA });\n      unlock();\n    } else {\n      alert(\"could not add activity row\");\n    }\n    let nextField = document.getElementById(\"hours\");\n    if (nextField) {\n      nextField.focus();\n    }\n  }\n\n  function hrsOnEnter(event: any) {\n    if (event.keyCode == 13) {\n      event.preventDefault();\n      let nextField = document.getElementById(\"activity\");\n      if (nextField) {\n        nextField.focus();\n      }\n    }\n  }\n\n  //renderTable returns a react node with table rows corresponding to the activitytable array elements.\n  function renderTable() {\n    return props.value.table.map((item) => {\n      return (\n        <tr id={item.id.toString()}>\n          <td>{item.hrs}</td>\n          <td>{item.activity}</td>\n          <td>\n            <button\n              type=\"button\"\n              onClick={(event) => deleteRow(event, item.id)}\n            >\n              X\n            </button>\n          </td>\n        </tr>\n      );\n    });\n  }\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <table className=\"activitiesTable\">\n          <thead>\n            <td>Hours</td>\n            <td>description</td>\n          </thead>\n          <tbody>\n            {renderTable()}\n            <tr>\n              <td>\n                <input\n                  id=\"hours\"\n                  type=\"number\"\n                  value={props.value.hrs}\n                  onChange={handleChangeHrs}\n                  onKeyDown={hrsOnEnter}\n                ></input>\n              </td>\n              <td>\n                <input\n                  id=\"activity\"\n                  type=\"text\"\n                  value={props.value.activity}\n                  onChange={handleChangeActivity}\n                ></input>\n              </td>\n              <td>\n                <input type=\"submit\" value=\"+\" />\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <td>Total: {sumHrs()}</td>\n          </tfoot>\n        </table>\n      </form>\n    </div>\n  );\n}\n\nlet Form = (props: { formID: string; value: string; setState: any }) => {\n  function handleSubmit(event: any) {\n    console.log(props.formID + \" \" + props.value);\n    event.preventDefault();\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>{props.formID}</label>\n        <br />\n        <textarea\n          value={props.value}\n          onChange={(event) => props.setState(event.target.value)}\n        />\n        <br />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </div>\n  );\n};\n",{"ruleId":"53","severity":1,"message":"54","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":29},{"ruleId":"53","severity":1,"message":"57","line":45,"column":7,"nodeType":"55","messageId":"56","endLine":45,"endColumn":16},{"ruleId":"53","severity":1,"message":"58","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":35},{"ruleId":"53","severity":1,"message":"59","line":17,"column":6,"nodeType":"55","messageId":"56","endLine":17,"endColumn":14},{"ruleId":"53","severity":1,"message":"60","line":22,"column":10,"nodeType":"55","messageId":"56","endLine":22,"endColumn":15},{"ruleId":"53","severity":1,"message":"61","line":22,"column":17,"nodeType":"55","messageId":"56","endLine":22,"endColumn":25},{"ruleId":"62","severity":1,"message":"63","line":152,"column":23,"nodeType":"64","messageId":"65","endLine":152,"endColumn":25},{"ruleId":"53","severity":1,"message":"66","line":160,"column":12,"nodeType":"55","messageId":"56","endLine":160,"endColumn":27},{"ruleId":"62","severity":1,"message":"63","line":161,"column":23,"nodeType":"64","messageId":"65","endLine":161,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":29},{"ruleId":"53","severity":1,"message":"57","line":45,"column":7,"nodeType":"55","messageId":"56","endLine":45,"endColumn":16},{"ruleId":"53","severity":1,"message":"67","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},{"ruleId":"53","severity":1,"message":"58","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":35},{"ruleId":"53","severity":1,"message":"59","line":18,"column":6,"nodeType":"55","messageId":"56","endLine":18,"endColumn":14},{"ruleId":"53","severity":1,"message":"60","line":23,"column":10,"nodeType":"55","messageId":"56","endLine":23,"endColumn":15},{"ruleId":"53","severity":1,"message":"61","line":23,"column":17,"nodeType":"55","messageId":"56","endLine":23,"endColumn":25},{"ruleId":"53","severity":1,"message":"68","line":24,"column":16,"nodeType":"55","messageId":"56","endLine":24,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":156,"column":23,"nodeType":"64","messageId":"65","endLine":156,"endColumn":25},"@typescript-eslint/no-unused-vars","'isPropertySignature' is defined but never used.","Identifier","unusedVar","'decrement' is assigned a value but never used.","'ReadableStreamBYOBRequest' is defined but never used.","'pageData' is defined but never used.","'table' is assigned a value but never used.","'setTable' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'activityOnEnter' is defined but never used.","'log' is defined but never used.","'setDate' is assigned a value but never used."]