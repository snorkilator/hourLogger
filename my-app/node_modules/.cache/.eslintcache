[{"/home/daniel/Documents/hourLogger/my-app/src/index.tsx":"1","/home/daniel/Documents/hourLogger/my-app/src/App.tsx":"2","/home/daniel/Documents/hourLogger/my-app/src/DayView.tsx":"3","/home/daniel/Documents/hourLogger/my-app/src/Home.tsx":"4"},{"size":658,"mtime":1654715981071,"results":"5","hashOfConfig":"6"},{"size":2885,"mtime":1659470243383,"results":"7","hashOfConfig":"6"},{"size":8365,"mtime":1659470999050,"results":"8","hashOfConfig":"6"},{"size":1521,"mtime":1659470339494,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wj0zun",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/daniel/Documents/hourLogger/my-app/src/index.tsx",[],[],"/home/daniel/Documents/hourLogger/my-app/src/App.tsx",["24","25"],[],"import * as React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { isPropertySignature } from \"typescript\";\nimport { DayView } from \"./DayView\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport { pageData } from \"./DayView\";\n\n/*\nReceiving\nHow does the transaction work?\n  initiate the request with get command\n  use page date as ID\n  send ID in url as page path\n    react router link on main page\n    link sends you to the page display\n      before page displays, do pull from database,\n        unwrap into object\n          populate state with object\n      Display page\n      if pull fails, display error message in alert box\nWhen do I want to get current state from server?\n- after, sending current state to server with good response\n  - do that on time intervols\n- Onload of page, receive current DB status\n- after a certain amount of changed to the website (nice to have, maybe not necessary) \n*/\n\nexport type state = { pages: [pageData] };\nexport default class App extends React.Component {\n  state: state;\n  getAll = () => {\n    //Dev Flag for console\n    let printConsole = false;\n    fetch(\"/getall\")\n      .then(\n        (data) => data.json(),\n        (err) => console.log(err)\n      )\n      .catch((err) => console.log(err))\n      .then((data: { data: [pageData] }) => {\n        if (data.data[0]) {\n          this.setState({ pages: data.data });\n          if (printConsole) {\n            console.log(\"writing from fetch to state\");\n            console.log(data.data);\n          }\n        }\n        if (printConsole) {\n          console.log(\"updated state from fetch:\");\n          this.setState((state) => console.log(state));\n        }\n      });\n  };\n  constructor(props: any) {\n    super(props);\n    let p = [\n      { table: [], goals: \"\", date: new Date().toDateString() },\n    ] as never;\n    this.state = { pages: p };\n    this.setState = this.setState.bind(this);\n    this.getAll = this.getAll.bind(this);\n    this.interval = null as unknown as NodeJS.Timer;\n  }\n  interval: NodeJS.Timer;\n  componentDidMount() {\n    this.interval = setInterval(() => this.getAll(), 5000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"text-center\">Hour Logger</h1>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Home\n                pages={this.state.pages}\n                setState={this.setState}\n                getAll={this.getAll}\n              />\n            }\n          />\n          <Route\n            path=\"/dayview/:date\"\n            element={<DayView state={this.state} setState={this.setState} />}\n          />\n        </Routes>\n      </div>\n    );\n  }\n}\n\n/*\n\npost and put flag\npost\n   when opening create dayview page\n\nput\n    opening directly to dayiew/someDate\n    when clicking on link to\n*/\n","/home/daniel/Documents/hourLogger/my-app/src/DayView.tsx",["26","27","28","29","30","31","32","33","34"],[],"/home/daniel/Documents/hourLogger/my-app/src/Home.tsx",["35","36","37","38","39","40"],[],"import React from \"react\";\nimport { pageData } from \"./DayView\";\nimport { Link } from \"react-router-dom\";\nimport { setConstantValue } from \"typescript\";\n\nexport default function Home(props: {\n  pages: [pageData];\n  setState: any;\n  getAll: VoidFunction;\n}) {\n  const [count, setCount] = React.useState(\"test\");\n  let increment = () => {\n    setCount(count + 1);\n  };\n  let decrement = () => {\n    setCount(count + 1);\n  };\n  React.useEffect(() => props.getAll(), []);\n  return (\n    <div>\n      <main>\n        <Table pages={props.pages} />\n        <Link to=\"/dayview/new\">New Page</Link>\n      </main>\n    </div>\n  );\n}\n\nfunction Table(props: { pages: [pageData] }) {\n  if (props.pages == null) return <div id=\"noData\">no data</div>;\n  return (\n    <table className=\"table\">\n      <thead>\n        {/* <td>Summary</td> */}\n        <td>Total HRS</td>\n        <td>Date</td>\n      </thead>\n      <tbody>\n        {props.pages.map((page, ID, a) => {\n          let tally = 0;\n          if (page.table != undefined) {\n            for (let row of page.table) {\n              tally += row.hrs + 0;\n            }\n          }\n          if (page.table.length !== 0) {\n            return (\n              <tr id={page.date}>\n                {/* <td>{page.date}</td> */}\n                <td>{tally}</td>\n                <td>\n                  {\" \"}\n                  <Link to={\"/dayview/\" + page.date}>{page.date}</Link>\n                </td>\n              </tr>\n            );\n          }\n        })}\n      </tbody>\n    </table>\n  );\n}\n",{"ruleId":"41","severity":1,"message":"42","line":2,"column":25,"nodeType":"43","messageId":"44","endLine":2,"endColumn":29},{"ruleId":"41","severity":1,"message":"45","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":29},{"ruleId":"41","severity":1,"message":"46","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"47","line":4,"column":10,"nodeType":"43","messageId":"44","endLine":4,"endColumn":31},{"ruleId":"41","severity":1,"message":"48","line":7,"column":10,"nodeType":"43","messageId":"44","endLine":7,"endColumn":28},{"ruleId":"49","severity":1,"message":"50","line":20,"column":34,"nodeType":"51","messageId":"52","endLine":20,"endColumn":36},{"ruleId":"49","severity":1,"message":"53","line":25,"column":22,"nodeType":"51","messageId":"52","endLine":25,"endColumn":24},{"ruleId":"49","severity":1,"message":"53","line":30,"column":19,"nodeType":"51","messageId":"52","endLine":30,"endColumn":21},{"ruleId":"49","severity":1,"message":"53","line":172,"column":23,"nodeType":"51","messageId":"52","endLine":172,"endColumn":25},{"ruleId":"41","severity":1,"message":"54","line":230,"column":9,"nodeType":"43","messageId":"44","endLine":230,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":250,"column":29,"nodeType":"51","messageId":"57","endLine":250,"endColumn":30},{"ruleId":"41","severity":1,"message":"58","line":4,"column":10,"nodeType":"43","messageId":"44","endLine":4,"endColumn":26},{"ruleId":"41","severity":1,"message":"59","line":12,"column":7,"nodeType":"43","messageId":"44","endLine":12,"endColumn":16},{"ruleId":"41","severity":1,"message":"60","line":15,"column":7,"nodeType":"43","messageId":"44","endLine":15,"endColumn":16},{"ruleId":"61","severity":1,"message":"62","line":18,"column":41,"nodeType":"63","endLine":18,"endColumn":43,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":39,"column":40,"nodeType":"67","messageId":"68","endLine":39,"endColumn":42},{"ruleId":"49","severity":1,"message":"50","line":41,"column":26,"nodeType":"51","messageId":"52","endLine":41,"endColumn":28},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'isPropertySignature' is defined but never used.","'log' is defined but never used.","'isPropertyAccessChain' is defined but never used.","'setEnvironmentData' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'table' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'setConstantValue' is defined but never used.","'increment' is assigned a value but never used.","'decrement' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.","ArrayExpression",["69"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",{"desc":"70","fix":"71"},"Update the dependencies array to be: [props]",{"range":"72","text":"73"},[463,465],"[props]"]