{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/hourLogger/my-app/src/DayView.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet PageID = 0;\nlet newPage = false;\nlet notSavedFlag = true;\nexport let DayView = props => {\n  _s();\n\n  // console.log(document.baseURI);\n  let params = useParams();\n\n  if (params.date && params.date != \"new\") {\n    console.log(\"saw date param:\");\n    console.log(params.date);\n    let str = params.date;\n    props.state.pages.forEach((value, i) => {\n      if (value.date == str) {\n        PageID = i;\n      }\n    });\n  }\n\n  if (params.date == \"new\") {\n    // console.log(\"DayView: newPage\");\n    props.state.pages = [{\n      table: [],\n      goals: \"\",\n      date: new Date().toDateString()\n    }];\n    newPage = true;\n  } // console.log(\"Rendering DayView with: \");\n  // console.log(props.state.pages);\n\n\n  let main = props.state.pages ? /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center display-3\",\n      children: props.state.pages[PageID].date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActivitiesTable, {\n      state: props.state,\n      setState: props.setState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      formID: \"Goals\",\n      state: props.state,\n      setState: props.setState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"main\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [main, /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"col-lg-2 pull-lg-4 btn bg-success\",\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DayView, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = DayView;\n\nlet NotSaved = () => {\n  if (notSavedFlag) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row bg-warning\",\n      children: \"Warning: Changes to Goals are not saved, click submit button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row bg-success\",\n    children: \"Field is up saved\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = NotSaved;\nlet count = 0;\n\nfunction ActivitiesTable(props) {\n  _s2();\n\n  let [tableEntry, setTableRow] = React.useState({\n    hrs: NaN,\n    activity: \"enter activitiy\"\n  });\n\n  function counter() {\n    count++;\n    return count;\n  } //handleSubmit adds row entry to activity table\n\n\n  function handleSubmit(event) {\n    event.preventDefault(); // console.log(props.pages[PageID].activity + \"counter:\" + counter());\n\n    if (!locked()) {\n      lock();\n      let tempTable = props.state.pages[PageID].table;\n      console.log(\"adding row: \" + tableEntry.hrs);\n      tempTable.push({\n        id: counter(),\n        hrs: tableEntry.hrs,\n        activity: tableEntry.activity\n      });\n      let tempPages = props.state.pages;\n      tempPages[PageID].table = tempTable;\n      props.setState(tempPages);\n      setTableRow({\n        hrs: NaN,\n        activity: \"enter activitiy\"\n      });\n      console.log(\"adding row: \" + props.state.pages[PageID].table[0].hrs);\n      props.setState(state => {\n        // console.log(state.pages[PageID].table[0].hrs || NaN);\n        sendData(state);\n      });\n      unlock();\n    } else {\n      alert(\"could not add activity row\");\n    }\n\n    let nextField = document.getElementById(\"hours\");\n\n    if (nextField) {\n      nextField.focus();\n    }\n\n    props.setState(value => {\n      // console.log(\"after Adding row:\");\n      // console.log(value.pages[PageID].table);\n      return value;\n    });\n  }\n\n  let tablecounterlock = false; //lock locks table counter\n\n  function lock() {\n    tablecounterlock = true;\n  } //unlock unlocks table counter\n\n\n  function unlock() {\n    tablecounterlock = false;\n  } //locked tell you if table counter is locked\n  // @returns boolean\n\n\n  function locked() {\n    return tablecounterlock;\n  }\n\n  function sumHrs() {\n    let count = 0;\n\n    for (let i = 0; i < props.state.pages[PageID].table.length; i++) {\n      let row = props.state.pages[PageID].table[i].hrs;\n\n      if (row) {\n        console.log(row);\n        count += row;\n      }\n    }\n\n    return count;\n  } //handleChangeActivity updates state of activity on change\n\n\n  function handleChangeActivity(event) {\n    setTableRow({\n      activity: event.target.value,\n      hrs: tableEntry.hrs\n    }); // console.log(props.value[tempPageID].activity);\n  } //handleChangeHrs updates state of hrs on change\n\n\n  function handleChangeHrs(event) {\n    setTableRow({\n      activity: tableEntry.activity,\n      hrs: parseFloat(event.target.value)\n    }); // console.log(props.pages[PageID].hrs);\n  }\n\n  function hrsOnEnter(event) {\n    if (event.keyCode == 13) {\n      event.preventDefault();\n      let nextField = document.getElementById(\"activity\");\n\n      if (nextField) {\n        nextField.focus();\n      }\n    }\n  } // console.log(\n  //   \"ActivityTable rendering\" + props.pages[PageID].table[0].activity\n  // );\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-group\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Hours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(TableMap, {\n            state: props.state,\n            setState: props.setState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                id: \"hours\",\n                type: \"number\",\n                value: tableEntry.hrs,\n                onChange: handleChangeHrs,\n                onKeyDown: hrsOnEnter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                id: \"activity\",\n                type: \"text\",\n                value: tableEntry.activity,\n                onChange: handleChangeActivity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control btn btn-outline-secondary\",\n                type: \"submit\",\n                value: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Total: \", sumHrs()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ActivitiesTable, \"VvpzIAtyJwOYTVoqWXzQc2Z1APc=\");\n\n_c3 = ActivitiesTable;\n\nfunction sendData(state) {\n  if (state.pages[PageID]) {\n    // add error handlingprops.pages[PageID].table[1].activity\n    console.log(\"interval send: \" + state.pages[PageID].date);\n    let JSONStr = JSON.stringify(state.pages[PageID]);\n    let request = new XMLHttpRequest();\n    request.open(newPage ? \"post\" : \"put\", \"/update/\");\n    request.setRequestHeader(\"Content-Type\", \"application/json\");\n    request.addEventListener(\"load\", event => {\n      console.log(\"XHR Status code: \", request.status);\n\n      if (request.status === 409) {\n        alert(\"The page you are trying to create already exists\");\n      }\n    });\n    console.log(\"SENDDATA:\");\n    console.log(newPage ? \"post\" : \"put\");\n    console.log(JSONStr);\n    request.send(JSONStr);\n  }\n} //deleterow deletes row from activity\n\n\nfunction deleteRow(id, state, setState) {\n  console.log(\"delete row:\" + \"Id: \" + id.toString());\n  let tempA = state.pages[PageID].table;\n\n  for (let i = 0; i < tempA.length; i++) {\n    if (tempA[i].id === id) {\n      console.log(i);\n      tempA.splice(i, 1);\n      let pages = state.pages;\n      pages[PageID].table = tempA;\n      setState({\n        pages\n      });\n    }\n  }\n\n  console.log(\"DeleteRow:\");\n  console.log(state.pages[PageID].table);\n  sendData(state);\n} //renderTable returns a react node with table rows corresponding to the activitytable array elements.\n\n\nlet TableMap = props => {\n  let rows = props.state.pages[PageID].table.map(item => {\n    console.log(\"DayView: renderTable: updating table with row\" + item.id + item.activity);\n\n    if (item != null) {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        id: item.id.toString(),\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.hrs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.activity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            type: \"button\",\n            onClick: () => deleteRow(item.id, props.state, props.setState),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this);\n    } else {\n      console.log(\"DayView: renderTable: map is empty\");\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"No entries... yet, time to get some shit done!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"emtry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: rows\n  }, void 0, false);\n}; //not modular currently!!\n\n\n_c4 = TableMap;\n\nlet Form = props => {\n  function updateGoal(event, state, setState) {\n    let tempState = state;\n    tempState.pages[PageID].goals = event.target.value;\n    setState(state => {\n      console.log(\"Update Goals before:\");\n      console.log(state.pages[PageID].goals);\n      return tempState;\n    });\n    setState(state => {\n      console.log(\"updateGoals after:\");\n      console.log(state.pages[PageID].goals);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => event.preventDefault(),\n      onChange: event => updateGoal(event, props.state, props.setState),\n      className: \"form text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.formID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: props.state.pages[PageID].goals,\n        onChange: event => props.setState({})\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotSaved, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn btn-outline-secondary\",\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 5\n  }, this);\n}; // React.useEffect\n//\n// local form State\n//\n// global state\n//\n// get current global state and set it to goals on component Mount\n// when globalstate.goals changes update local state (useeffect(updatefunction, goals))\n// on form change update local\n// on submit update global and call sendData\n//\n// changes not saved System\n// up to date flag\n// onmount get current global state\n// function that shows warning and asks if you want to save progress on goals form\n// little indicator above goals form\n// onchange upToDate flag is false\n// on sendData upToDate is true\n// (ideally only when goals is mismatched with DB (or at least global state) upToDate is false)\n// Watch video on autosave. like youtube what docs does for this feature\n\n\n_c5 = Form;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DayView\");\n$RefreshReg$(_c2, \"NotSaved\");\n$RefreshReg$(_c3, \"ActivitiesTable\");\n$RefreshReg$(_c4, \"TableMap\");\n$RefreshReg$(_c5, \"Form\");","map":{"version":3,"names":["React","Link","useParams","PageID","newPage","notSavedFlag","DayView","props","params","date","console","log","str","state","pages","forEach","value","i","table","goals","Date","toDateString","main","setState","NotSaved","count","ActivitiesTable","tableEntry","setTableRow","useState","hrs","NaN","activity","counter","handleSubmit","event","preventDefault","locked","lock","tempTable","push","id","tempPages","sendData","unlock","alert","nextField","document","getElementById","focus","tablecounterlock","sumHrs","length","row","handleChangeActivity","target","handleChangeHrs","parseFloat","hrsOnEnter","keyCode","JSONStr","JSON","stringify","request","XMLHttpRequest","open","setRequestHeader","addEventListener","status","send","deleteRow","toString","tempA","splice","TableMap","rows","map","item","Form","updateGoal","tempState","formID"],"sources":["/home/daniel/Documents/hourLogger/my-app/src/DayView.tsx"],"sourcesContent":["import { log } from \"node:console\";\nimport * as React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport {\n  flattenDiagnosticMessageText,\n  isPropertyAccessChain,\n} from \"typescript\";\nimport \"./App.css\";\nimport type { state } from \"./App\";\nimport { setEnvironmentData } from \"node:worker_threads\";\nimport { getSystemErrorMap } from \"node:util\";\n\ntype row = {\n  id: number;\n  hrs: number;\n  activity: string;\n};\nlet PageID = 0;\nlet newPage = false;\nlet notSavedFlag = true;\nexport type pageData = { goals: string; table: row[]; date: string };\nexport let DayView = (props: { state: state; setState: any }) => {\n  // console.log(document.baseURI);\n  let params = useParams();\n  if (params.date && params.date != \"new\") {\n    console.log(\"saw date param:\");\n    console.log(params.date);\n    let str = params.date;\n    props.state.pages.forEach((value, i) => {\n      if (value.date == str) {\n        PageID = i;\n      }\n    });\n  }\n  if (params.date == \"new\") {\n    // console.log(\"DayView: newPage\");\n    props.state.pages = [\n      { table: [], goals: \"\", date: new Date().toDateString() },\n    ];\n    newPage = true;\n  }\n\n  // console.log(\"Rendering DayView with: \");\n  // console.log(props.state.pages);\n\n  let main = props.state.pages ? (\n    <main>\n      <h1 className=\"text-center display-3\">\n        {props.state.pages[PageID].date}\n      </h1>\n      <ActivitiesTable state={props.state} setState={props.setState} />\n      <Form formID=\"Goals\" state={props.state} setState={props.setState} />\n    </main>\n  ) : (\n    <main>Loading...</main>\n  );\n  return (\n    <div className=\"container\">\n      {main}\n      <nav>\n        <Link className=\"col-lg-2 pull-lg-4 btn bg-success\" to=\"/\">\n          Home\n        </Link>\n      </nav>\n    </div>\n  );\n};\nlet NotSaved = () => {\n  if (notSavedFlag) {\n    return (\n      <div className=\"row bg-warning\">\n        \n        Warning: Changes to Goals are not saved, click submit button\n      </div>\n    );\n  }\n  return (\n    <div className=\"row bg-success\">\n      Field is up saved\n    </div>\n  );\n};\nlet count: number = 0;\nfunction ActivitiesTable(props: { state: state; setState: any }) {\n  let [tableEntry, setTableRow] = React.useState({\n    hrs: NaN,\n    activity: \"enter activitiy\",\n  });\n  function counter(): number {\n    count++;\n    return count;\n  }\n  //handleSubmit adds row entry to activity table\n  function handleSubmit(event: any) {\n    event.preventDefault();\n    // console.log(props.pages[PageID].activity + \"counter:\" + counter());\n    if (!locked()) {\n      lock();\n      let tempTable = props.state.pages[PageID].table;\n      console.log(\"adding row: \" + tableEntry.hrs);\n      tempTable.push({\n        id: counter(),\n        hrs: tableEntry.hrs,\n        activity: tableEntry.activity,\n      });\n\n      let tempPages = props.state.pages;\n      tempPages[PageID].table = tempTable;\n      props.setState(tempPages);\n      setTableRow({\n        hrs: NaN,\n        activity: \"enter activitiy\",\n      });\n      console.log(\"adding row: \" + props.state.pages[PageID].table[0].hrs);\n      props.setState((state: state) => {\n        // console.log(state.pages[PageID].table[0].hrs || NaN);\n        sendData(state);\n      });\n      unlock();\n    } else {\n      alert(\"could not add activity row\");\n    }\n    let nextField = document.getElementById(\"hours\");\n    if (nextField) {\n      nextField.focus();\n    }\n\n    props.setState((value: state) => {\n      // console.log(\"after Adding row:\");\n      // console.log(value.pages[PageID].table);\n      return value;\n    });\n  }\n\n  let tablecounterlock: boolean = false;\n\n  //lock locks table counter\n  function lock() {\n    tablecounterlock = true;\n  }\n\n  //unlock unlocks table counter\n  function unlock() {\n    tablecounterlock = false;\n  }\n  //locked tell you if table counter is locked\n  // @returns boolean\n  function locked(): boolean {\n    return tablecounterlock;\n  }\n\n  function sumHrs(): number {\n    let count = 0;\n    for (let i = 0; i < props.state.pages[PageID].table.length; i++) {\n      let row = props.state.pages[PageID].table[i].hrs;\n      if (row) {\n        console.log(row);\n        count += row;\n      }\n    }\n    return count;\n  }\n\n  //handleChangeActivity updates state of activity on change\n  function handleChangeActivity(event: any) {\n    setTableRow({\n      activity: event.target.value,\n      hrs: tableEntry.hrs,\n    });\n\n    // console.log(props.value[tempPageID].activity);\n  }\n\n  //handleChangeHrs updates state of hrs on change\n  function handleChangeHrs(event: any) {\n    setTableRow({\n      activity: tableEntry.activity,\n      hrs: parseFloat(event.target.value),\n    });\n\n    // console.log(props.pages[PageID].hrs);\n  }\n\n  function hrsOnEnter(event: any) {\n    if (event.keyCode == 13) {\n      event.preventDefault();\n      let nextField = document.getElementById(\"activity\");\n      if (nextField) {\n        nextField.focus();\n      }\n    }\n  }\n\n  // console.log(\n  //   \"ActivityTable rendering\" + props.pages[PageID].table[0].activity\n  // );\n  return (\n    <div>\n      <form className=\"form-group\" onSubmit={handleSubmit}>\n        <table className=\"table\">\n          <thead>\n            <td>Hours</td>\n            <td>description</td>\n          </thead>\n          <tbody>\n            <TableMap state={props.state} setState={props.setState} />\n            <tr>\n              <td>\n                <input\n                  className=\"form-control\"\n                  id=\"hours\"\n                  type=\"number\"\n                  value={tableEntry.hrs}\n                  onChange={handleChangeHrs}\n                  onKeyDown={hrsOnEnter}\n                ></input>\n              </td>\n              <td>\n                <input\n                  className=\"form-control\"\n                  id=\"activity\"\n                  type=\"text\"\n                  value={tableEntry.activity}\n                  onChange={handleChangeActivity}\n                ></input>\n              </td>\n              <td>\n                <input\n                  className=\"form-control btn btn-outline-secondary\"\n                  type=\"submit\"\n                  value=\"+\"\n                />\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <td>Total: {sumHrs()}</td>\n          </tfoot>\n        </table>\n      </form>\n    </div>\n  );\n}\n\nfunction sendData(state: state) {\n  if (state.pages[PageID]) {\n    // add error handlingprops.pages[PageID].table[1].activity\n    console.log(\"interval send: \" + state.pages[PageID].date);\n    let JSONStr = JSON.stringify(state.pages[PageID]);\n    let request = new XMLHttpRequest();\n    request.open(newPage ? \"post\" : \"put\", \"/update/\");\n    request.setRequestHeader(\"Content-Type\", \"application/json\");\n    request.addEventListener(\"load\", (event) => {\n      console.log(\"XHR Status code: \", request.status);\n      if (request.status === 409) {\n        alert(\"The page you are trying to create already exists\");\n      }\n    });\n    console.log(\"SENDDATA:\");\n    console.log(newPage ? \"post\" : \"put\");\n    console.log(JSONStr);\n    request.send(JSONStr);\n  }\n}\n\n//deleterow deletes row from activity\nfunction deleteRow(id: number, state: state, setState: any) {\n  console.log(\"delete row:\" + \"Id: \" + id.toString());\n  let tempA = state.pages[PageID].table;\n  for (let i = 0; i < tempA.length; i++) {\n    if (tempA[i].id === id) {\n      console.log(i);\n      tempA.splice(i, 1);\n      let pages = state.pages;\n      pages[PageID].table = tempA;\n      setState({ pages });\n    }\n  }\n  console.log(\"DeleteRow:\");\n  console.log(state.pages[PageID].table);\n  sendData(state);\n}\n\n//renderTable returns a react node with table rows corresponding to the activitytable array elements.\nlet TableMap = (props: { state: state; setState: any }) => {\n  let rows = props.state.pages[PageID].table.map((item) => {\n    console.log(\n      \"DayView: renderTable: updating table with row\" + item.id + item.activity\n    );\n    if (item != null) {\n      return (\n        <tr id={item.id.toString()}>\n          <td>{item.hrs}</td>\n          <td>{item.activity}</td>\n          <td>\n            <button\n              className=\"btn btn-secondary\"\n              type=\"button\"\n              onClick={() => deleteRow(item.id, props.state, props.setState)}\n            >\n              X\n            </button>\n          </td>\n        </tr>\n      );\n    } else {\n      console.log(\"DayView: renderTable: map is empty\");\n      return (\n        <tr>\n          <td>No entries... yet, time to get some shit done!</td>\n          <td>empty</td>\n          <td>emtry</td>\n        </tr>\n      );\n    }\n  });\n  return <>{rows}</>;\n};\n\n//not modular currently!!\nlet Form = (props: { formID: string; state: state; setState: any }) => {\n  function updateGoal(event: any, state: state, setState: any) {\n    let tempState = state;\n    tempState.pages[PageID].goals = event.target.value;\n    setState((state: state) => {\n      console.log(\"Update Goals before:\");\n      console.log(state.pages[PageID].goals);\n      return tempState;\n    });\n    setState((state: state) => {\n      console.log(\"updateGoals after:\");\n      console.log(state.pages[PageID].goals);\n    });\n  }\n\n  return (\n    <div>\n      <form\n        onSubmit={(event) => event.preventDefault()}\n        onChange={(event) => updateGoal(event, props.state, props.setState)}\n        className=\"form text-center\"\n      >\n        <label>{props.formID}</label>\n        <br />\n        <textarea\n          className=\"form-control\"\n          value={props.state.pages[PageID].goals}\n          onChange={(event) => props.setState({} as state)}\n        />\n        <br />\n        <NotSaved />\n        <input\n          className=\"btn btn-outline-secondary\"\n          type=\"submit\"\n          value=\"Submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\n// React.useEffect\n//\n// local form State\n//\n// global state\n//\n// get current global state and set it to goals on component Mount\n// when globalstate.goals changes update local state (useeffect(updatefunction, goals))\n// on form change update local\n// on submit update global and call sendData\n//\n// changes not saved System\n// up to date flag\n// onmount get current global state\n// function that shows warning and asks if you want to save progress on goals form\n// little indicator above goals form\n// onchange upToDate flag is false\n// on sendData upToDate is true\n// (ideally only when goals is mismatched with DB (or at least global state) upToDate is false)\n// Watch video on autosave. like youtube what docs does for this feature\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}