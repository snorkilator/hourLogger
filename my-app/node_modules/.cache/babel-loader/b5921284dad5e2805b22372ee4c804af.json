{"ast":null,"code":"var _jsxFileName = \"/home/daniel/Documents/hourLogger/my-app/src/App.tsx\";\nimport * as React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { DayView } from \"./DayView\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n\n    this.getAll = () => {\n      //Dev Flag for console\n      let printConsole = false;\n      fetch(\"/getall\").then(data => data.json(), err => console.log(err)).catch(err => console.log(err)).then(data => {\n        if (data.data[0]) {\n          this.setState({\n            pages: data.data\n          });\n\n          if (printConsole) {\n            console.log(\"writing from fetch to state\");\n            console.log(data.data);\n          }\n        }\n\n        if (printConsole) {\n          console.log(\"updated state from fetch:\");\n          this.setState(state => console.log(state));\n        }\n      });\n    };\n\n    this.interval = void 0;\n    let p = [{\n      table: [],\n      goals: \"\",\n      date: new Date().toDateString()\n    }];\n    this.state = {\n      pages: p\n    };\n    this.setState = this.setState.bind(this);\n    this.getAll = this.getAll.bind(this);\n    this.interval = null;\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.getAll(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid App bg-\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"row navbar text-center bg-success\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-1\",\n          children: \"Hour Logger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            pages: this.state.pages,\n            setState: this.setState,\n            getAll: this.getAll\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dayview/:date\",\n          element: /*#__PURE__*/_jsxDEV(DayView, {\n            state: this.state,\n            setState: this.setState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Routes","Route","DayView","Home","App","Component","constructor","props","state","getAll","printConsole","fetch","then","data","json","err","console","log","catch","setState","pages","interval","p","table","goals","date","Date","toDateString","bind","componentDidMount","setInterval","componentWillUnmount","clearInterval","render"],"sources":["/home/daniel/Documents/hourLogger/my-app/src/App.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { isPropertySignature } from \"typescript\";\nimport { DayView } from \"./DayView\";\nimport \"./App.css\";\nimport Home from \"./Home\";\nimport { pageData } from \"./DayView\";\n\nexport type state = { pages: [pageData] };\nexport default class App extends React.Component {\n  state: state;\n  getAll = () => {\n    //Dev Flag for console\n    let printConsole = false;\n    fetch(\"/getall\")\n      .then(\n        (data) => data.json(),\n        (err) => console.log(err)\n      )\n      .catch((err) => console.log(err))\n      .then((data: { data: [pageData] }) => {\n        if (data.data[0]) {\n          this.setState({ pages: data.data });\n          if (printConsole) {\n            console.log(\"writing from fetch to state\");\n            console.log(data.data);\n          }\n        }\n        if (printConsole) {\n          console.log(\"updated state from fetch:\");\n          this.setState((state) => console.log(state));\n        }\n      });\n  };\n  constructor(props: any) {\n    super(props);\n    let p = [\n      { table: [], goals: \"\", date: new Date().toDateString() },\n    ] as never;\n    this.state = { pages: p };\n    this.setState = this.setState.bind(this);\n    this.getAll = this.getAll.bind(this);\n    this.interval = null as unknown as NodeJS.Timer;\n  }\n  interval: NodeJS.Timer;\n  componentDidMount() {\n    this.interval = setInterval(() => this.getAll(), 5000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  render() {\n    return (\n      <div className=\"container-fluid App bg-\">\n        <header className=\"row navbar text-center bg-success\">\n          <h1 className=\"display-1\">Hour Logger</h1>\n        </header>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <Home\n                pages={this.state.pages}\n                setState={this.setState}\n                getAll={this.getAll}\n              />\n            }\n          />\n          <Route\n            path=\"/dayview/:date\"\n            element={<DayView state={this.state} setState={this.setState} />}\n          />\n        </Routes>\n      </div>\n    );\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}